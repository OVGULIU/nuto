# $Id$
SET(NuToBase_SOURCES
  Exception.cpp
)

SET(NuToBase_SWIG_MODULES
  ModulNuToBase
)

# build static library
ADD_LIBRARY(NuToBase STATIC ${NuToBase_SOURCES})
IF(CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64" )
  SET_TARGET_PROPERTIES(NuToBase PROPERTIES COMPILE_FLAGS "-fPIC")
ENDIF(CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64" )
# install static library
INSTALL(TARGETS NuToBase ARCHIVE DESTINATION ${NUTO_LIBRARIES_INSTALL_PATH})

# build python modules
CONFIGURE_FILE(__init__.py ${CMAKE_CURRENT_BINARY_DIR}/__init__.py)
NUTO_INSTALL_PYTHON_FILE(__init__.py ${NUTO_PYTHON_MODULES_INSTALL_PATH}/nuto/base)
FOREACH(NuToBase_SWIG_MODULE ${NuToBase_SWIG_MODULES})
  SET_SOURCE_FILES_PROPERTIES(${NuToBase_SWIG_MODULE}.i PROPERTIES CPLUSPLUS ON)
  SET_SOURCE_FILES_PROPERTIES(${NuToBase_SWIG_MODULE}.i PROPERTIES SWIG_FLAGS "${NuTo_SWIG_FLAGS}")
  SWIG_ADD_MODULE(${NuToBase_SWIG_MODULE} python ${NuToBase_SWIG_MODULE}.i)
  # link library
  SWIG_LINK_LIBRARIES(${NuToBase_SWIG_MODULE} NuToBase ${PYTHON_LIBRARIES})
  # check for unresolved symbols
  IF( NOT WIN32 AND NOT CYGWIN )
    SET_TARGET_PROPERTIES(${SWIG_MODULE_${NuToBase_SWIG_MODULE}_REAL_NAME} PROPERTIES LINK_FLAGS -Wl,-z,defs)
  ENDIF( NOT WIN32 AND NOT CYGWIN )
  IF(MINGW)
    SET_TARGET_PROPERTIES(${SWIG_MODULE_${NuToBase_SWIG_MODULE}_REAL_NAME} PROPERTIES LINK_FLAGS -Wl,--enable-auto-import)
  ENDIF(MINGW)

  # installation
  NUTO_INSTALL_SWIG_PYTHON_MODULE(${NuToBase_SWIG_MODULE} ${NUTO_PYTHON_MODULES_INSTALL_PATH}/nuto/base)
ENDFOREACH(NuToBase_SWIG_MODULE)
