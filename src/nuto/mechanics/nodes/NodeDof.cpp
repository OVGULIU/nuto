// $Id: $

//#ifdef ENABLE_SERIALIZATION
//#include <boost/archive/binary_oarchive.hpp>
//#include <boost/archive/binary_iarchive.hpp>
//#include <boost/archive/xml_oarchive.hpp>
//#include <boost/archive/xml_iarchive.hpp>
//#include <boost/archive/text_oarchive.hpp>
//#include <boost/archive/text_iarchive.hpp>
//#endif  // ENABLE_SERIALIZATION
#include "nuto/mechanics/nodes/NodeDof.h"

#ifdef ENABLE_SERIALIZATION
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 0, 0, 0, 0, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 0, 0, 0, 0, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 0, 0, 0, 0, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 0, 2, 0, 0, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 0, 3, 0, 0, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 1, 1, 0, 0, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 1, 2, 0, 0, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 1, 3, 0, 0, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 2, 1, 0, 0, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 2, 2, 0, 0, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 2, 3, 0, 0, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 0, 1, 0, 0, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 0, 2, 1, 0, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 0, 3, 3, 0, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 2, 2, 1, 0, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 2, 3, 3, 0, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 0, 0, 0, 1, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 0, 0, 0, 1, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 0, 0, 0, 1, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 1, 0, 0, 1, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 1, 0, 0, 1, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 1, 0, 0, 1, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 2, 0, 0, 1, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 2, 0, 0, 1, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 2, 0, 0, 1, 0, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 0, 1, 0, 0, 2, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 0, 2, 0, 0, 2, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 0, 3, 0, 0, 2, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 2, 1, 0, 0, 2, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 2, 2, 0, 0, 2, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 2, 3, 0, 0, 2, 0, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 0, 1, 0, 0, 0, 1, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 0, 2, 0, 0, 0, 3, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 0, 3, 0, 0, 0, 6, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 2, 1, 0, 0, 0, 1, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 2, 2, 0, 0, 0, 3, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 2, 3, 0, 0, 0, 6, 0, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 0, 1, 0, 0, 0, 0, 1, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 0, 2, 0, 0, 0, 0, 1, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 0, 3, 0, 0, 0, 0, 1, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 2, 1, 0, 0, 0, 0, 1, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 2, 2, 0, 0, 0, 0, 1, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 2, 3, 0, 0, 0, 0, 1, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 0, 0, 0, 0, 0, 0, 1, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 0, 0, 0, 0, 0, 0, 1, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 0, 0, 0, 0, 0, 0, 1, 0, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 0, 1, 0, 0, 0, 0, 0, 1, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 0, 2, 0, 0, 0, 0, 0, 1, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 0, 3, 0, 0, 0, 0, 0, 1, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 1, 1, 0, 0, 0, 0, 0, 1, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 1, 2, 0, 0, 0, 0, 0, 1, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 1, 3, 0, 0, 0, 0, 0, 1, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 2, 1, 0, 0, 0, 0, 0, 1, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 2, 2, 0, 0, 0, 0, 0, 1, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 2, 3, 0, 0, 0, 0, 0, 1, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 0, 0, 0, 0, 0, 0, 0, 1, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 0, 0, 0, 0, 0, 0, 0, 1, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 0, 0, 0, 0, 0, 0, 0, 1, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 1, 0, 0, 0, 0, 0, 0, 1, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 1, 0, 0, 0, 0, 0, 0, 1, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 1, 0, 0, 0, 0, 0, 0, 1, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 2, 0, 0, 0, 0, 0, 0, 1, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 2, 0, 0, 0, 0, 0, 0, 1, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 2, 0, 0, 0, 0, 0, 0, 1, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 0, 0, 0, 0, 0, 0, 0, 0, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 0, 0, 0, 0, 0, 0, 0, 0, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 0, 0, 0, 0, 0, 0, 0, 0, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 1, 0, 0, 0, 0, 0, 0, 0, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 1, 0, 0, 0, 0, 0, 0, 0, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 1, 0, 0, 0, 0, 0, 0, 0, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 2, 0, 0, 0, 0, 0, 0, 0, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 2, 0, 0, 0, 0, 0, 0, 0, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 2, 0, 0, 0, 0, 0, 0, 0, 1>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 0, 0, 0, 0, 0, 0, 0, 1, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 0, 0, 0, 0, 0, 0, 0, 1, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 0, 0, 0, 0, 0, 0, 0, 1, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 1, 0, 0, 0, 0, 0, 0, 1, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 1, 0, 0, 0, 0, 0, 0, 1, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 1, 0, 0, 0, 0, 0, 0, 1, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<1, 2, 0, 0, 0, 0, 0, 0, 1, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<2, 2, 0, 0, 0, 0, 0, 0, 1, 0>)))
BOOST_CLASS_EXPORT_IMPLEMENT(BOOST_IDENTITY_TYPE((NuTo::NodeDof<3, 2, 0, 0, 0, 0, 0, 0, 1, 0>)))
#endif // ENABLE_SERIALIZATION
