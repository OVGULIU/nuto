include(AddFileDependencies)
include(BinaryToCXX)

function(bundle_artprovider_art output_sources mime)
  foreach(file ${ARGN})
    file(RELATIVE_PATH file_rel ${CMAKE_CURRENT_SOURCE_DIR} ${file})
    get_filename_component(file_name ${file} NAME)
    set(data_cxx_name ${file_name}.inc)
    set(data_cxx_name_full ${CMAKE_CURRENT_BINARY_DIR}/${data_cxx_name})
    string(REGEX REPLACE "^[^A-Za-z_]" "_" cxx_ident ${file_rel})
    string(REGEX REPLACE "[^A-Za-z0-9_]" "_" cxx_ident ${cxx_ident})
    binary_to_cxx(${data_cxx_name_full} INPUT ${file} IDENTIFIER ${cxx_ident})

    set(register_cxx_name ${CMAKE_CURRENT_BINARY_DIR}/${file_name}.cpp)
    set(register_cxx_name_temp ${register_cxx_name}.tmp)
    file(WRITE ${register_cxx_name_temp} "#include \"common.h\"\n")
    file(APPEND ${register_cxx_name_temp} "#include \"uicommon/ArtProvider.h\"\n")
    file(APPEND ${register_cxx_name_temp} "#include \"${data_cxx_name}\"\n")
    file(APPEND ${register_cxx_name_temp} "ARTPROVIDER_REGISTER(\"${file_name}\", ${cxx_ident}_data, ${cxx_ident}_size, \"${mime}\")\n")

    execute_process(COMMAND ${CMAKE_COMMAND} -E copy_if_different "${register_cxx_name_temp}" "${register_cxx_name}")
    execute_process(COMMAND ${CMAKE_COMMAND} -E remove "${register_cxx_name_temp}")
    set_source_files_properties(${register_cxx_name} PROPERTIES GENERATED TRUE)

    list(APPEND ${output_sources} "${data_cxx_name}" "${register_cxx_name}")
  endforeach()
  set(${output_sources} ${${output_sources}} PARENT_SCOPE)
endfunction(bundle_artprovider_art)
