language: cpp
sudo: required
dist: trusty
compiler:
    - clang
    - gcc
env:
    - RELEASE=true
    - RELEASE=false
matrix:
    exclude:
        - compiler: clang
          env: RELEASE=false
before_install:
    - export PATH=/home/travis/miniconda/bin:$PATH
    - ./scripts/install_numpy.sh
    - ./scripts/install_eigen.sh
    - pip install --user cpp-coveralls
    - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
    - echo "yes" | sudo add-apt-repository 'deb http://llvm.org/apt/trusty/ llvm-toolchain-trusty-3.9 main'
    - wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -
    - sudo apt-get -qq update
    - sudo apt-get install -y g++-6 clang-3.9 libgfortran-6-dev libgcc-6-dev libiomp-dev swig3.0 doxygen python-dev python-numpy libboost1.55-all-dev libopenblas-dev libmetis-dev libmumps-seq-dev libann-dev libarpack2-dev gfortran gmsh
    - sudo apt-get install -y lcov curl
before_script:
    - mkdir build
    - cd build
    - OPTIONS="-DENABLE_METAMODEL=TRUE -DENABLE_OPTIMIZE=TRUE -DENABLE_ARPACK=TRUE -DENABLE_GEOMETRYCONCRETE=TRUE -DENABLE_MPI=TRUE"
    - if [[ "$CXX" == "g++" ]] && [[ "$RELEASE" == "false" ]]; then CXX=g++-6 cmake -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=TRUE $OPTIONS ..; fi
    - if [[ "$CXX" == "g++" ]] && [[ "$RELEASE" == "true" ]]; then CXX=g++-6 cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_EXAMPLES=TRUE $OPTIONS ..; fi
    - if [[ "$CXX" == "clang++" ]]; then CXX=clang++-3.9 cmake -DCMAKE_BUILD_TYPE=Release -DENABLE_EXAMPLES=TRUE $OPTIONS ..; fi
script:
    - make -j2
    - ctest --output-on-failure
after_success:
    - cd ..
    - if [[ "$CXX" == "g++" ]] && [[ "$RELEASE" == "false" ]]; then coveralls -E '.*PYTHON.*' --gcov-options '\-lp' > /dev/null; fi
