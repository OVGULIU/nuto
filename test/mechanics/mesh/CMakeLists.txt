add_unit_test(MeshFem
    mechanics/interpolation/InterpolationTrussLinear.cpp
    mechanics/interpolation/InterpolationTriangleLinear.cpp
    mechanics/interpolation/InterpolationQuadLinear.cpp
    mechanics/interpolation/InterpolationTriangleQuadratic.cpp
    mechanics/mesh/MeshFemDofConvert)

add_unit_test(UnitMeshFem
    mechanics/mesh/MeshFem
    mechanics/interpolation/InterpolationTriangleLinear.cpp
    mechanics/interpolation/InterpolationTrussLinear.cpp
    mechanics/interpolation/InterpolationQuadLinear.cpp
    mechanics/interpolation/InterpolationBrickLinear.cpp
    )

foreach(inputFile
    binary.msh
    brickL2.msh
    quad.msh
    quadL2.msh
    quadNoncontiguous.msh
    quad1.msh
    quadSerendipity2.msh
    triangle1.msh
    triangle2.msh
    line1.msh
    line2.msh
    tet1.msh
    hex1.msh
    prism1.msh
    pyramid1.msh
    )
create_symlink("${inputFile}")
endforeach()

add_unit_test(MeshGmsh
    mechanics/mesh/MeshFem
    math/Legendre
    mechanics/interpolation/InterpolationTrussLinear.cpp
    mechanics/interpolation/InterpolationTrussQuadratic.cpp
    mechanics/interpolation/InterpolationTriangleLinear.cpp
    mechanics/interpolation/InterpolationTriangleQuadratic.cpp
    mechanics/interpolation/InterpolationQuadLinear.cpp
    mechanics/interpolation/InterpolationQuadSerendipity.cpp
    mechanics/interpolation/InterpolationTetrahedronLinear.cpp
    mechanics/interpolation/InterpolationTetrahedronQuadratic.cpp
    mechanics/interpolation/InterpolationBrickLinear.cpp
    mechanics/interpolation/InterpolationPrismLinear.cpp
    mechanics/interpolation/InterpolationPrismQuadratic.cpp
    mechanics/interpolation/InterpolationPyramidLinear.cpp
    mechanics/elements/SpectralShapeFunctions.cpp)
